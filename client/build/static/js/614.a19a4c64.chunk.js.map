{"version":3,"file":"static/js/614.a19a4c64.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Delete.js","Components/ViewEmail.jsx","constants/constant.js","services/api.js","hooks/useApi.jsx","services/apiurls.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import { useOutletContext, useLocation } from \"react-router-dom\";\r\nimport { Box, Typography, styled } from \"@mui/material\";\r\nimport { ArrowBack, Delete } from \"@mui/icons-material\";\r\nimport { dppic } from \"../constants/constant\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport { API_URLS } from \"../services/apiurls\";\r\nconst IconWrapper = styled(Box)({\r\n  padding: 15,\r\n});\r\nconst Subject = styled(Typography)({\r\n  fontSize: 22,\r\n  margin: \"10px 20px 20px 75px\",\r\n  display: \"flex\",\r\n});\r\nconst Indicator = styled(Box)`\r\n  font-size: 12px;\r\n  background-color: #ddd;\r\n  color: #223;\r\n  padding: 2px 4px;\r\n  margin-left: 6px;\r\n  border-radius: 4px;\r\n  align-self: center;\r\n`;\r\n\r\nconst Container = styled(Box)({\r\n  marginLeft: 15,\r\n  width: \"100%\",\r\n\r\n  \"&>div\": {\r\n    display: \"flex\",\r\n    \"&>p>span\": {\r\n      fontSize: 12,\r\n      color: \"#878787\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Date = styled(Box)({\r\n  margin: \"0 50px 0 auto\",\r\n});\r\nconst ViewEmail = () => {\r\n  const { openDrawer } = useOutletContext();\r\n  const { state } = useLocation();\r\n  const { email } = state;\r\n\r\n  const moveEmailsToBinService = useApi(API_URLS.moveEmailsToBin);\r\n  const deleteEmail = () => {\r\n    moveEmailsToBinService.call([email._id]);\r\n    window.history.back();\r\n  };\r\n  return (\r\n    <Box\r\n      style={\r\n        openDrawer\r\n          ? { marginLeft: 250, marginTop: 62 }\r\n          : { marginTop: 62, width: \"100%\" }\r\n      }\r\n    >\r\n      <IconWrapper>\r\n        <ArrowBack\r\n          onClick={() => window.history.back()}\r\n          color=\"action\"\r\n          fontSize=\"small\"\r\n        />\r\n        <Delete\r\n          fontSize=\"small\"\r\n          color=\"action\"\r\n          style={{ marginLeft: 40 }}\r\n          onClick={() => deleteEmail()}\r\n        />\r\n      </IconWrapper>\r\n      <Subject>\r\n        {email.subject}\r\n        <Indicator component=\"span\">Inbox</Indicator>\r\n      </Subject>\r\n      <Box style={{ display: \"flex\" }}>\r\n        <img\r\n          src={dppic}\r\n          alt=\"dppic\"\r\n          width=\"40px\"\r\n          height=\"40px\"\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            background: \"#FF8551\",\r\n            margin: \"5px 10px 0 10px\",\r\n            padding: 2,\r\n          }}\r\n        />\r\n        <Container>\r\n          <Box>\r\n            <Typography style={{ marginTop: \"10px\" }}>\r\n              {email.name}\r\n              <Box component=\"span\"> &nbsp;&lt; {email.to} &#62;</Box>{\" \"}\r\n            </Typography>\r\n            <Date>\r\n              {new window.Date(email.date).getDate()}&nbsp;\r\n              {new window.Date(email.date).toLocaleString(\"default\", {\r\n                month: \"long\",\r\n              })}\r\n              &nbsp;\r\n              {new window.Date(email.date).getFullYear()}&nbsp;\r\n            </Date>\r\n          </Box>\r\n          <Typography style={{ marginTop: 20 }}>{email.body}</Typography>\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ViewEmail;\r\n","export const gmailLogo =\r\n  \"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\";\r\n\r\nexport const dppic =\r\n  \"https://www.srikiran.org/wp-content/uploads/2021/07/xnew_Avatar-Blank-Profile-Picture-Display-Pic-Mystery-Man-973460.png.pagespeed.ic.hA_i2zIsZe.webp\";\r\n\r\nexport const EMPTY_TABS = {\r\n  inbox: {\r\n    heading: \"Your Inbox is Empty\",\r\n    subHeading: \"Mails that don't exist in other tabs will be shown here.\",\r\n  },\r\n  drafts: {\r\n    heading: \"You don't have any saved drafts.\",\r\n    subHeading:\r\n      \"Saving a draft allows ou to keeep a message you aren't ready to send yet.\",\r\n  },\r\n  starred: {\r\n    heading: \"You haven't starred any email/s.\",\r\n    subHeading:\r\n      \"Stars let you ginve messages a spaecial status to make them easier to findTo star a mail click on star.\",\r\n  },\r\n  sent: {\r\n    heading: \"You haven't sent any emails.\",\r\n    subHeading: \"Send one Now!.\",\r\n  },\r\n  bin: {\r\n    heading: \"Empty bin.\",\r\n    subHeading: \"you can see your deleted emails here .\",\r\n  },\r\n  allmail: {\r\n    heading: \"You do not have any type of mail.\",\r\n    subHeading: \"But you can see all your emails here\",\r\n  },\r\n};\r\n","import axios from \"axios\";\r\n\r\n/*\r\nMethod1 for axios use\r\n  using axios.get(url),axios.post(url,data),axios.delete(url),axios.put(url,data);\r\n\r\nMethod2  concept of interceptors\r\n  \r\n  axios.interceptors.request.use(function(config)){\r\n\r\n  }\r\n  axios.interceptors.response.use(function(response))\r\n\r\nMethod3 using axios as a function\r\n \r\nhere we can pass the object in argument\r\n  axios({\r\n\r\n  })\r\n\r\n*/\r\nconst API_URL = \"\";\r\n\r\nconst API_GMAIL = async (urlObject, payload,type) => {\r\n  return await axios({\r\n    method: urlObject.method,\r\n    url: `${API_URL}/${urlObject.endpoint}/${type}`,\r\n    // use data as payload\r\n    data: payload,\r\n  });\r\n};\r\nexport default API_GMAIL;\r\n","import { useState } from \"react\";\r\nimport API from \"../services/api.js\";\r\n\r\nconst useApi = (urlObject) => {\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const call = async (payload, type = \"\") => {\r\n    // ensures that each time Response,Error get initialised with initial value;\r\n    setResponse(null);\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      let res = await API(urlObject, payload, type);\r\n      setResponse(res.data);\r\n      // there are lots of information in response section to get data we use res.data\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return { call, response, error, isLoading };\r\n};\r\n\r\nexport default useApi;\r\n","export const API_URLS = {\r\n  saveSentEmail: {\r\n    endpoint: \"save\",\r\n    method: \"POST\",\r\n  },\r\n  getEmailFromType: {\r\n    endpoint: \"emails\",\r\n    method: \"GET\",\r\n  },\r\n  saveDraftEmails: {\r\n    endpoint: \"save-draft\",\r\n    method: \"POST\",\r\n  },\r\n  moveEmailsToBin: {\r\n    endpoint: \"bin\",\r\n    method: \"POST\",\r\n  },\r\n  toggleStarred: {\r\n    endpoint: \"starred\",\r\n    method: \"POST\",\r\n  },\r\n  deleteEmail: {\r\n    endpoint: \"delete\",\r\n    method: \"DELETE\",\r\n  },\r\n};\r\n"],"names":["createSvgIcon","_jsx","d","IconWrapper","styled","Box","padding","Subject","Typography","fontSize","margin","display","Indicator","_templateObject","_taggedTemplateLiteral","Container","marginLeft","width","color","Date","openDrawer","useOutletContext","email","useLocation","state","moveEmailsToBinService","useApi","API_URLS","_jsxs","style","marginTop","children","ArrowBack","onClick","window","history","back","Delete","call","_id","subject","component","src","dppic","alt","height","borderRadius","background","name","to","date","getDate","toLocaleString","month","getFullYear","body","gmailLogo","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","allmail","API_GMAIL","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","urlObject","payload","type","wrap","_context","prev","next","axios","method","url","concat","endpoint","data","abrupt","stop","_x","_x2","_x3","apply","arguments","_useState","useState","_useState2","_slicedToArray","response","setResponse","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","res","_args","length","undefined","API","t0","message","finish","saveSentEmail","getEmailFromType","saveDraftEmails","moveEmailsToBin","toggleStarred","deleteEmail"],"sourceRoot":""}